div + p  /*<div> 요소 바로 뒤에있는 모든 <p> 요소*/
p ~ ul  /*<p> 요소의 형제중 모든 <ul> 요소.*/

[target = _blank] /*target = "_ blank"인 모든 요소*/
[title ~ = flower] /*title 속성에 "flower"라는 단어가 포함 된 모든 요소.*/
[lang | = ko] /*lang 속성 값이 "en"으로 시작하는 모든 요소.*/
a [href ^ = "https"] /*href 속성 값이 "https"로 시작하는 모든 <a> 요소.*/
a [href $ = "pdf"] /*href 속성 값이 "pdf"로 끝나는 모든 <a> 요소.*/
a [href * = "w3schools"] /* href 속성 값에 하위 문자열 "w3schools"이 포함 된 모든 <a> 요소. */

/* 글래스모피즘  */
backdrop-filter: blur(8px);

/****** where() or is() ******/
/* section 요소의 자식중 h2, h3, h4의 속성 */
section h2, section h3, section h4{}
section:where(h2, h3, h4) {}

/* span 요소의 부모중 h2, h3, h4의 속성 */
h2 > span, h3 > span, h4 > span{}
:where(h2, h3, h4) > span {}

/* where() 이중처리 */
section h1, section h2,
article h1, article h2{}
:where(section, article) :where(h1, h2) {}

:where(header, main, footer) p {color: red;} /* 나중에 정의된 선택자에 의해 무시된다 */
:is(header, main, footer) p {color: orange;} /* 가장 명시도가 높아 밑에 뭐가 있던 무조건 적용된다 */

/***** :has() *****/
/* div 요소가 자손으로 img를 가지고 있을 경우 */
div:has(img) {}
/* div 요소가 자식으로 img를 가지고 있을 경우 */
div:has(> img) {}
/* div 요소가 형제로 p를 가지고 있을 경우 */
div:has(+ p) {}
/* div 요소가 자손으로 h3 그리고 p를 가지고 있을 경우 (and 논리) */
div:has(h3, p) {}

/* :not() */
:not(p) {color: #ff0000;}
div:not(.abc){} 
input:not([DISABLED]){}
ul li:not(:last-of-type) {border-bottom:1px solid #333;}

/* :has() 와 :not() 조합 */
/* div 요소가 자손으로 h3을 가지고 있지 않을 경우 div전체 칼라 적용 */
div:not(:has(h3)) {color: red;}

/* div 요소의 자손이 h3이 아닌 요소가 있을 경우 div전체 칼라 적용*/
div:has(:not(h3)) {color: blue;}

#grad {
  background-image: linear-gradient(to bottom right, red, yellow);
  background-image: linear-gradient(-90deg, red, yellow);
}

/* 말줄임 */
.ellipsis {text-overflow: ellipsis;white-space: nowrap;width: 329px;overflow: hidden;}
.ellipsis2 {text-overflow: ellipsis;overflow: hidden; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical;
  word-wrap: break-word; line-height: 1.5em; height: 3em; word-break: keep-all;}

/* 텍스트  */
.txt{word-break:keep-all / break-all / break-word}
 
/*  placeholder */
input::placeholder {color: red;font-style: italic;}
textarea::placeholder {color: blue;font-weight: bold;}

/* slider common */
.slick-slider{overflow:hidden;position:relative;}
.slick-slide{display: none;float: left;min-height: 1px;}
.slick-initialized .slick-slide{display: block;}

.slick-dots{position: absolute; bottom: 25px; display: block; width: 100%; padding: 0; margin: 0; list-style: none; text-align: center;}
.slick-dots li{position: relative; display: inline-block; width: 13px; height:13px; margin: 0 5px; padding: 0; cursor: pointer;}
.slick-dots li button{ font-size: 0; line-height: 0; display: block; width: 100%; height: 100%; padding: 5px; cursor: pointer; color: transparent; border: 0; outline: none; background:#fff;border-radius: 50px}
.slick-dots li.slick-active button{background:#64c5b5;}

.slick-prev, .slick-next{font-size: 0;line-height: 0;position: absolute;top: 50%;display: block;width: 40px;height: 50px;padding: 0;-webkit-transform: translate(0, -50%);padding:10px;
-ms-transform: translate(0, -50%);transform: translate(0, -50%);cursor: pointer;color: transparent;border: none;outline: none;background: transparent;z-index: 1;}
.slick-next{right: 0px;}
.slick-prev:before, .slick-next:before{content: '';display: block;border-right: 1px solid #000;border-top: 1px solid #000;width: 20px;height: 20px;transform: rotate(-135deg);}
.slick-next:before{transform: rotate(45deg);}

/* <img src="image.png" loading="lazy" >
<dialog> */

:focus{ outline: 3px solid #aaa; } /* 접근성 */
:focus:not(:focus-visible) {outline: 0;} /* 접근성 */
html{scroll-behavior:smooth;}
input[type=checkbox]{accent-color:red;}/* 폼 요소에 변수 색상 지정 */